USE DB02;

SELECT  TUM.USER_NAME,
		TPM.PRODUCT_NAME, 
		Q1.QUANTITY AS ORDERED_QUANTITY,
		CASE
			WHEN Q2.PAYMENT IS NULL THEN 0 
			ELSE Q2.PAYMENT 
		END AS AMOUNT_PAID,
		CASE
			WHEN Q2.LAST_DATE > Q1.LAST_DATE THEN Q2.LAST_DATE
			ELSE Q1.LAST_DATE
		END AS LAST_TRANSACTION_DATE,
		CASE
			WHEN Q2.PAYMENT IS NULL THEN Q1.QUANTITY*TPM.COST_PER_ITEM 
			ELSE Q1.QUANTITY*TPM.COST_PER_ITEM - Q2.PAYMENT 
		END AS BALANCE
FROM
(
	SELECT T_TRANSACTION.USER_ID AS USER_ID, 
	       T_TRANSACTION.PRODUCT_ID AS PRODUCT_ID, 
		   MAX(T_TRANSACTION.TRANSACTION_DATE) AS LAST_DATE, 
		   SUM(T_TRANSACTION.TRANSACTION_AMOUNT) AS QUANTITY 
	FROM  T_TRANSACTION 
	WHERE T_TRANSACTION.TRANSACTION_TYPE='ORDER' 
	GROUP BY T_TRANSACTION.USER_ID, T_TRANSACTION.PRODUCT_ID
) Q1
LEFT JOIN
(
	SELECT T_TRANSACTION.USER_ID,
		   T_TRANSACTION.PRODUCT_ID, 
		   MAX(T_TRANSACTION.TRANSACTION_DATE) AS LAST_DATE, 
		   SUM(T_TRANSACTION.TRANSACTION_AMOUNT) AS PAYMENT
	FROM     T_TRANSACTION 
	WHERE    T_TRANSACTION.TRANSACTION_TYPE='PAYMENT' 
	GROUP BY USER_ID, PRODUCT_ID 
) Q2 ON Q1.USER_ID = Q2.USER_ID AND Q1.PRODUCT_ID = Q2.PRODUCT_ID
LEFT JOIN T_USER_MASTER TUM ON TUM.USER_ID = Q1.USER_ID
LEFT JOIN T_PRODUCT_MASTER TPM ON TPM.PRODUCT_ID = Q1.PRODUCT_ID